[package]
name = "tpulse"
version = "0.1.0"
description = "A work-in-progress productivity tool."
authors = ["TickLabVN"]
license = "MIT"
repository = ""
default-run = "tpulse"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.5.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "1.5.2", features = [] }
log = "0.4"
device_query = "1.1.3"
anyhow = "1.0.77"
regex = "1.10.2"
dirs = "5.0.1"
rusqlite = { version = "0.30.0", features = ["bundled"] }
tauri-plugin-log = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1" }
tauri-plugin-sql = { git = "https://github.com/tauri-apps/plugins-workspace", branch = "v1", features = [
    "sqlite",
] }
lazy_static = "1.4.0"
libc = "0.2.152"
oauth2 = "4.0.0"
reqwest = { version = "0.11", features = ["json"] }
webbrowser = "0.8.13"
chrono = "0.4.37"
once_cell = "1.19.0"
into_variant = "0.3.0"
url = "2.5.0"
csv = "1.3.0"

[target.'cfg(windows)'.dependencies]
winapi = { version = "0.3.9", features = ["namedpipeapi", "handleapi"] }
windows = { version = "0.52.0", features = [
    "Win32_Foundation",
    "Win32_UI",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System",
    "Win32_System_Threading",
] }

[target.'cfg(target_os = "macos")'.dependencies]
core-graphics = "0.23"
core-foundation = "0.9"
appkit-nsworkspace-bindings = "0.1.2"
objc = "0.2"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
