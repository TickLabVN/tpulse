[package]
name = "tpulse"
version = "0.1.0"
description = "A work-in-progress productivity tool."
authors = ["TickLabVN"]
license = "MIT"
repository = ""
default-run = "tpulse"
edition = "2021"
rust-version = "1.60"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.0.3", features = [] }

[dependencies]
serde_json = "1.0.132"
serde = { version = "1.0.215", features = ["derive"] }
tauri = { version = "2.1.1", features = [] }
device_query = "2.1.0"
anyhow = "1.0.93"
regex = "1.11.1"
dirs = "5.0.1"
rusqlite = { version = "0.32.1", features = ["bundled"] }
tauri-plugin-sql = { version = "2.0.2", features = ["sqlite"] }
lazy_static = "1.4.0"
libc = "0.2.162"
reqwest = { version = "0.12.9", features = ["json", "blocking"] }
webbrowser = "1.0.2"
once_cell = "1.20.2"
url = "2.5.3"
csv = "1.3.1"
log = "0.4.21"
env_logger = "0.11"
dotenvy = "0.15.7"
fuzzy-matcher = "0.3.7"
time = "0.3.17"

[target.'cfg(target_os = "windows")'.dependencies]
winapi = { version = "0.3.9", features = [
    "namedpipeapi",
    "handleapi",
    "fileapi",
    "winbase",
] }
windows = { version = "0.58.0", features = [
    "Win32_Foundation",
    "Win32_UI",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System",
    "Win32_System_Threading",
] }

[target.'cfg(target_os = "macos")'.dependencies]
core-graphics = "0.24"
core-foundation = "0.10"
appkit-nsworkspace-bindings = "0.1.2"
objc = "0.2"

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
